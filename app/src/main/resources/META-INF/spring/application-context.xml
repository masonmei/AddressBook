<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xsi:schemaLocation="http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <axon:annotation-config />

    <!--
     <bean class="org.axonframework.eventhandling.annotation.AnnotationEventListenerBeanPostProcessor"/>

     <bean class="org.axonframework.commandhandling.annotation.AnnotationCommandHandlerBeanPostProcessor"/>
     -->

    <!-- ================================================ -->
    <!-- Example with an embedded ref -->
    <!-- ================================================ -->
    <!-- <axon:commandBus id="commandBus"> <axon:interceptors> <ref local="commandbus-interceptor"/>
         </axon:interceptors> </axon:commandBus> -->

    <!-- ================================================ -->
    <!-- Example with an embedded bean -->
    <!-- ================================================ -->
    <!--
     <axon:commandBus id="commandBus">
         <axon:interceptors>
             <bean class="org.axonframework.commandhandling.interceptors.SpringTransactionalInterceptor">
                 <property name="transactionManager" ref="transactionManager" />
             </bean>
         </axon:interceptors>
     </axon:commandBus>
     -->

    <!-- ================================================ -->
    <!-- Example with a single interceptor ref            -->
    <!-- ================================================ -->
    <!--
    <bean id="commandBus" class="org.axonframework.commandhandling.SimpleCommandBus">
         <property name="interceptors"> <bean class="org.axonframework.commandhandling.interceptors.SpringTransactionalInterceptor">
         <property name="transactionManager" ref="transactionManager"/> </bean> </property>
    </bean>
    -->
    <axon:command-bus id="commandBus" transaction-manager="transactionManager"/>

    <!--	<bean id="eventBus" class="org.axonframework.eventhandling.SimpleEventBus" />-->
    <axon:event-bus id="eventBus"/>

    <bean id="taskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2"/>
        <property name="maxPoolSize" value="5"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <!--
        <bean id="contactRepository"
              class="org.axonframework.eventsourcing.EventSourcingRepository">
            <constructor-arg value="org.axonframework.sample.app.command.Contact"/>
            <property name="eventBus" ref="eventBus"/>
            <property name="eventStore" ref="eventStore"/>
            <property name="snapshotterTrigger">
                <bean class="org.axonframework.eventsourcing.EventCountSnapshotterTrigger">
                    <property name="snapshotter" ref="snapshotter"/>
                    <property name="trigger" value="5"/>
                </bean>
            </property>
        </bean>
    -->
    <axon:event-sourcing-repository id="contactRepository" aggregate-type="org.personal.mason.addressbook.app.model.Contact"
                                    event-bus="eventBus" event-store="eventStore">
        <axon:snapshotter-trigger event-count-threshold="5" snapshotter-ref="snapshotter"/>
    </axon:event-sourcing-repository>

    <!--
    <bean id="snapshotter"
          class="org.axonframework.eventsourcing.SpringAggregateSnapshotter">
        <property name="eventStore" ref="eventStore"/>
        <property name="executor" ref="taskExecutor"/>
    </bean>
    -->
    <axon:snapshotter id="snapshotter" event-store="eventStore" executor="taskExecutor"/>

    <!--	<bean id="eventStore" class="org.axonframework.eventstore.jpa.JpaEventStore" />-->
    <axon:filesystem-event-store id="eventStore" base-dir="${java.io.tmpdir}"/>

    <bean id="contactCommandHandler"
          class="org.personal.mason.addressbook.app.command.handler.AddressBookCommandHandler">
        <property name="repository" ref="contactRepository"/>
        <property name="contactRepository" ref="queryContactRepository"/>
        <property name="contactNameRepository" ref="contactNameRepository"/>
    </bean>

    <bean id="contactNameRepository" class="org.personal.mason.addressbook.app.query.JpaContactNameRepository"/>
</beans>